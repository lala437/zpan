{"version":3,"sources":["webpack:///./src/views/home/picture/index.vue?15d7","webpack:///src/views/home/picture/index.vue","webpack:///./src/views/home/picture/index.vue?8799","webpack:///./src/views/home/picture/index.vue","webpack:///./src/libs/mixin/cs.js","webpack:///./src/libs/mixin/dialog.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","handleUpload","acceptImgs","fileList","showPicPreview","handleRemove","staticClass","dialog","show","title","on","$event","$set","imgUrl","slot","_v","_s","$t","staticRenderFns","mixins","data","picHost","methods","getLink","Promise","resolve","ret","link","listRefresh","$zpan","File","list","ele","url","lock","text","spinner","background","timestamp","Date","getTime","fileObj","filename","file","name","replace","upload","getSid","$confirm","type","confirmButtonText","cancelButtonText","message","mounted","utils","component","Mixin","cs","watch","$route","newVal","oldVal","setCs","computed","$store","state","storages","forEach","params","sname","id","DialogMixin","visible","val","$destroy","document","body","appendChild","$el","destroyed","parentNode","removeChild","open","close","finish","$emit"],"mappings":"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","file":"js/chunk-c39e5b9a.e791fdf7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-upload',{attrs:{\"action\":\"\",\"list-type\":\"picture-card\",\"http-request\":_vm.handleUpload,\"accept\":_vm.acceptImgs,\"file-list\":_vm.fileList,\"on-preview\":_vm.showPicPreview,\"before-remove\":_vm.handleRemove}},[_c('i',{staticClass:\"el-icon-plus\"})]),_c('el-dialog',{attrs:{\"visible\":_vm.dialog.show,\"title\":_vm.dialog.title,\"center\":\"\"},on:{\"update:visible\":function($event){return _vm.$set(_vm.dialog, \"show\", $event)}}},[_c('img',{attrs:{\"width\":\"100%\",\"src\":_vm.dialog.imgUrl,\"alt\":\"\"}}),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{staticClass:\"copy-link\",attrs:{\"type\":\"primary\",\"data-clipboard-text\":_vm.dialog.imgUrl},on:{\"click\":function($event){_vm.dialog.show = false}}},[_vm._v(_vm._s(_vm.$t(\"copy-link\")))])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <el-upload action list-type=\"picture-card\" :http-request=\"handleUpload\" :accept=\"acceptImgs\" :file-list=\"fileList\" :on-preview=\"showPicPreview\" :before-remove=\"handleRemove\">\n      <i class=\"el-icon-plus\"></i>\n    </el-upload>\n\n    <!-- preview dialog -->\n    <el-dialog :visible.sync=\"dialog.show\" :title=\"dialog.title\" center>\n      <img width=\"100%\" :src=\"dialog.imgUrl\" alt />\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" class=\"copy-link\" :data-clipboard-text=\"dialog.imgUrl\" @click=\"dialog.show = false\">{{ $t(\"copy-link\") }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport utils from \"@/libs/utils.js\";\nimport { CSMixin } from \"@/libs/mixin\";\nexport default {\n  mixins: [CSMixin],\n  data() {\n    return {\n      picHost: \"\",\n      acceptImgs: \"image/jpeg,image/png,image/gif\",\n      fileList: [],\n      dialog: {\n        show: false,\n        title: \"\",\n        imgUrl: \"\",\n      },\n    };\n  },\n  methods: {\n    getLink(alias) {\n      return new Promise((resolve, reject) => {\n        this.$zpan.File.findLink(alias).then((ret) => {\n          resolve(ret.link);\n        });\n      });\n    },\n    listRefresh() {\n      this.$zpan.File.list({ sid: this.getSid(), type: \"image\" }).then((data) => {\n        this.fileList = data.list.map((obj) => {\n          return { alias: obj.alias, name: obj.name, url: obj.url };\n        });\n        this.fileList.forEach((ele) => {\n          this.getLink(ele.alias).then((link) => {\n            ele.url = link;\n          });\n        });\n        this.loading = false;\n      });\n    },\n    handleUpload(fileObj) {\n      const loading = this.$loading({\n        lock: true,\n        text: \"Uploading\",\n        spinner: \"el-icon-loading\",\n        background: \"rgba(0, 0, 0, 0.7)\",\n      });\n\n      var timestamp = new Date().getTime();\n      fileObj.filename = fileObj.file.name.replace(\"image\", timestamp);\n\n      this.$zpan.File.upload(this.getSid(), fileObj)\n        .then((ret) => {\n          let file = {\n            name: fileObj.filename,\n            url: ret.data.url,\n          };\n          this.showPicPreview(file);\n          this.listRefresh();\n          loading.close();\n        })\n        .catch(() => {\n          this.listRefresh();\n          loading.close();\n        });\n    },\n    handleRemove(file, fileList) {\n      return this.$confirm(this.$t(\"tips.remove\"), this.$t(\"delete\") + ` ${file.name}`, {\n        type: \"warning\",\n        confirmButtonText: this.$t(\"confirm\"),\n        cancelButtonText: this.$t(\"cancel\"),\n      }).then(() => {\n        this.$zpan.File.delete(file.alias).then((ret) => {\n          this.$message({\n            type: \"success\",\n            message: this.$t(\"msg.delete-success\"),\n          });\n        });\n      });\n    },\n    showPicPreview(file) {\n      this.dialog = {\n        show: true,\n        title: file.name,\n        imgUrl: file.url,\n      };\n    },\n  },\n  mounted() {\n    this.listRefresh();\n    utils.setupPasteUpload(this.handleUpload);\n  },\n};\n</script>\n\n<style scoped>\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7736bc03&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7736bc03\",\n  null\n  \n)\n\nexport default component.exports","\nconst Mixin = {\n    data() {\n        return {\n            cs: {}\n        }\n    },\n    watch: {\n        $route(newVal, oldVal) {\n            this.setCs()\n        },\n    },\n    computed: {},\n    methods: {\n        setCs() {\n            this.$store.state.storages.forEach((ele) => {\n                if (ele.name == this.$route.params.sname) {\n                    this.cs = ele\n                }\n            });\n        },\n        getSid() {\n            return this.cs.id\n        },\n    },\n    mounted() {\n        this.setCs()\n    },\n}\n\nexport default Mixin","const DialogMixin = {\n    data() {\n        return {\n            visible: false\n        }\n    },\n    watch: {\n        visible(val) {\n            !val && this.$destroy()\n        }\n    },\n    mounted() {\n        document.body.appendChild(this.$el)\n        this.visible = true\n    },\n    destroyed() {\n        this.$el.parentNode.removeChild(this.$el)\n    },\n    methods: {\n        open() {\n            this.visible = true;\n        },\n        close() {\n            this.visible = false;\n        },\n        finish() {\n            this.visible = false;\n            this.$emit('completed');\n        },\n    }\n}\n\nexport default DialogMixin"],"sourceRoot":""}